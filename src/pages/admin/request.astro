---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Admin - Request Article">
  <div class="max-w-4xl mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-8">
      <h1 class="text-3xl font-bold">Request New Article (RSOC Structure)</h1>
      <a href="/admin" class="text-blue-600 hover:text-blue-700 font-medium"
        >← Back to Articles</a
      >
    </div>

    <div class="bg-white shadow rounded-lg p-6">
      <form id="article-form" class="space-y-6">
        <!-- Title (Required) -->
        <div>
          <label
            for="title"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Article Title <span class="text-red-500">*</span>
          </label>
          <input
            type="text"
            id="title"
            name="title"
            required
            placeholder="e.g., Understanding Renewable Energy Certificates (RECs)"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
          />
          <p class="mt-1 text-sm text-gray-500">
            The main headline for your article
          </p>
        </div>

        <!-- AI Provider Selection -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">
            AI Provider <span class="text-red-500">*</span>
          </label>
          <div class="flex gap-4">
            <label class="flex items-center cursor-pointer">
              <input
                type="radio"
                name="provider"
                value="openai"
                checked
                class="w-4 h-4 text-blue-600 border-gray-300 focus:ring-blue-500 mr-2"
              />
              <span class="text-sm">OpenAI (GPT-4)</span>
            </label>
            <label class="flex items-center cursor-pointer">
              <input
                type="radio"
                name="provider"
                value="groq"
                class="w-4 h-4 text-blue-600 border-gray-300 focus:ring-blue-500 mr-2"
              />
              <span class="text-sm">Groq (LLaMA 3.3)</span>
            </label>
          </div>
        </div>

        <!-- Section Titles (Required, 3-5 items) -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Section Titles (H2 Headings) <span class="text-red-500">*</span>
          </label>
          <div id="section-titles-container" class="space-y-2">
            <input
              type="text"
              name="section_title_1"
              placeholder="Section 1: e.g., What RECs Represent"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
            />
            <input
              type="text"
              name="section_title_2"
              placeholder="Section 2: e.g., How Markets Typically Work"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
            />
            <input
              type="text"
              name="section_title_3"
              placeholder="Section 3: e.g., Common Cost Drivers"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
            />
            <input
              type="text"
              name="section_title_4"
              placeholder="Section 4 (optional)"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
            />
            <input
              type="text"
              name="section_title_5"
              placeholder="Section 5 (optional)"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
            />
          </div>
          <p class="mt-1 text-sm text-gray-500">
            Minimum 3 sections required, maximum 5 supported
          </p>
        </div>

        <!-- Intro (Optional) -->
        <div>
          <label
            for="intro"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Introduction (optional)
          </label>
          <textarea
            id="intro"
            name="intro"
            rows="3"
            placeholder="A neutral overview of how RECs function within electricity markets..."
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
          ></textarea>
          <p class="mt-1 text-sm text-gray-500">
            If provided and less than 250 chars, will be auto-expanded to ≥250
            chars
          </p>
        </div>

        <!-- Language -->
        <div>
          <label
            for="language"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Language <span class="text-red-500">*</span>
          </label>
          <select
            id="language"
            name="language"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
          >
            <option value="EN">English (EN)</option>
            <option value="ES">Spanish (ES)</option>
            <option value="FR">French (FR)</option>
            <option value="DE">German (DE)</option>
            <option value="IT">Italian (IT)</option>
          </select>
        </div>

        <!-- Vertical (Required) -->
        <div>
          <label
            for="vertical"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Vertical <span class="text-red-500">*</span>
          </label>
          <select
            id="vertical"
            name="vertical"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
          >
            <option value="">Select vertical...</option>
            <option value="health">Health</option>
            <option value="beauty">Beauty</option>
            <option value="automotive">Automotive</option>
            <option value="real_estate">Real Estate</option>
            <option value="loans">Loans</option>
            <option value="credit_and_banking">Credit and Banking</option>
            <option value="insurance">Insurance</option>
            <option value="legal">Legal</option>
            <option value="education">Education</option>
            <option value="career">Career</option>
            <option value="business">Business</option>
            <option value="technology">Technology</option>
            <option value="software">Software</option>
            <option value="travel">Travel</option>
            <option value="luxury">Luxury</option>
            <option value="home_improvement">Home Improvement</option>
            <option value="shopping">Shopping</option>
            <option value="food">Food</option>
            <option value="lifestyle">Lifestyle</option>
            <option value="energy">Energy</option>
            <option value="family">Family</option>
            <option value="pets">Pets</option>
          </select>
        </div>

        <!-- Keywords (Required) -->
        <div>
          <label
            for="keywords"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Keywords <span class="text-red-500">*</span>
          </label>
          <input
            type="text"
            id="keywords"
            name="keywords"
            required
            placeholder="renewable energy, certificates, REC market"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
          />
          <p class="mt-1 text-sm text-gray-500">
            Separate keywords with commas
          </p>
        </div>

        <!-- Show RSOC Feed -->
        <div>
          <label class="flex items-center cursor-pointer">
            <input
              type="checkbox"
              id="showRsocFeed"
              name="showRsocFeed"
              checked
              class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500 mr-2"
            />
            <span class="text-sm font-medium text-gray-700">
              Show RSOC Feed
            </span>
          </label>
        </div>

        <!-- Advanced Options -->
        <details class="border border-gray-200 rounded-md">
          <summary
            class="px-4 py-3 cursor-pointer font-medium text-gray-700 hover:bg-gray-50"
          >
            ⚙️ Advanced Options (Optional)
          </summary>
          <div class="p-4 border-t bg-gray-50 space-y-4">
            <!-- External Reference -->
            <div>
              <label
                for="external_ref"
                class="block text-sm font-medium text-gray-700 mb-1"
              >
                External Reference
              </label>
              <input
                type="text"
                id="external_ref"
                name="external_ref"
                placeholder="e.g., tarzo-job-8b1a"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
              />
            </div>

            <!-- Campaign ID -->
            <div>
              <label
                for="campaign_id"
                class="block text-sm font-medium text-gray-700 mb-1"
              >
                Campaign ID
              </label>
              <input
                type="text"
                id="campaign_id"
                name="campaign_id"
                placeholder="e.g., cmp_12345"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
              />
            </div>
          </div>
        </details>

        <!-- Buttons -->
        <div class="flex gap-4 pt-4 border-t">
          <button
            type="submit"
            id="submit-btn"
            class="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 disabled:bg-gray-300 disabled:cursor-not-allowed"
          >
            Generate Article
          </button>
          <button
            type="reset"
            class="px-6 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300"
          >
            Reset
          </button>
        </div>

        <div id="status-message" class="hidden mt-4 p-4 rounded-md"></div>
      </form>
    </div>
  </div>

  <script>
    const form = document.getElementById("article-form");
    const submitBtn = document.getElementById("submit-btn");
    const statusMsg = document.getElementById("status-message");

    function showStatus(message, type = "info") {
      statusMsg.textContent = message;
      statusMsg.className = `mt-4 p-4 rounded-md ${
        type === "success"
          ? "bg-green-100 text-green-800"
          : type === "error"
            ? "bg-red-100 text-red-800"
            : "bg-blue-100 text-blue-800"
      }`;
      statusMsg.classList.remove("hidden");
    }

    function buildPayload(formData) {
      // Collect section titles (filter empty)
      const section_titles = [];
      for (let i = 1; i <= 5; i++) {
        const val = formData.get(`section_title_${i}`)?.trim();
        if (val) section_titles.push(val);
      }

      // Validate minimum 3 sections
      if (section_titles.length < 3) {
        throw new Error("At least 3 section titles are required");
      }

      // Build keywords array
      const keywordsRaw = formData.get("keywords");
      const keywords = keywordsRaw
        ? keywordsRaw
            .split(",")
            .map((k) => k.trim())
            .filter((k) => k.length > 0)
        : [];

      // Build metadata
      const metadata = {};
      if (formData.get("external_ref"))
        metadata.external_ref = formData.get("external_ref");
      if (formData.get("campaign_id"))
        metadata.campaign_id = formData.get("campaign_id");
      metadata.showRsocFeed = formData.get("showRsocFeed") === "on";

      return {
        topic: formData.get("title"),  // ← שנה title → topic
        section_titles: section_titles,
        intro: formData.get("intro") || null,
        target_languages: [formData.get("language") || "en"],
        vertical: formData.get("vertical"),
        keywords: keywords,
        siteId: import.meta.env.PUBLIC_SITE_ID || "infostreamhub",
        provider: formData.get("provider") || "openai",
        metadata: metadata,
      };
    }

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(form);

      submitBtn.disabled = true;
      const provider = formData.get("provider") || "openai";
      const providerName =
        provider === "openai" ? "OpenAI GPT-4" : "Groq LLaMA 3.3";
      submitBtn.textContent = `Generating with ${providerName}...`;
      showStatus(`Submitting article request to ${providerName}...`, "info");

      try {
        const payload = buildPayload(formData);
        console.log("Payload:", payload);

        const response = await fetch(
          `${import.meta.env.PUBLIC_API_BASE}/api/v1/content/articles/auto`,
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: "Bearer tarzo-key-001",
            },
            body: JSON.stringify(payload),
          }
        );

        if (response.ok) {
          const result = await response.json();
          showStatus(
            `✓ Article created successfully! Slug: ${result.slug}`,
            "success"
          );
          setTimeout(() => {
            window.location.replace("/admin");
            window.location.reload(true);
          }, 2000);
        } else {
          const error = await response.text();
          showStatus(`Error: ${response.status} - ${error}`, "error");
        }
      } catch (error) {
        showStatus(`Error: ${error.message}`, "error");
      } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = "Generate Article (OpenAI)";
      }
    });
  </script>
</Layout>
